// Generated by CoffeeScript 1.9.1
(function() {
  var BelongsToProperty,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BelongsToProperty = (function(superClass) {
    extend(BelongsToProperty, superClass);

    function BelongsToProperty() {
      return BelongsToProperty.__super__.constructor.apply(this, arguments);
    }

    BelongsToProperty.set({
      storm: 'belongsTo'
    });

    BelongsToProperty.prototype.kind = 'belongsTo';

    BelongsToProperty.prototype.get = function() {
      return this.model.prototype.fetch(BelongsToProperty.__super__.get.apply(this, arguments));
    };

    BelongsToProperty.prototype.validate = function(value) {
      if (value == null) {
        value = this.value;
      }
      return (BelongsToProperty.__super__.validate.call(this, value)) === true && ((value == null) || this.model.prototype.fetch(value instanceof this.model));
    };

    BelongsToProperty.prototype.normalize = function(value) {
      var record;
      switch (false) {
        case !(value == null):
          return void 0;
        case !(value instanceof this.model):
          return value.get('id');
        case typeof value !== 'string':
          return value;
        case typeof value !== 'number':
          return "" + value;
        case !(value instanceof Array):
          return void 0;
        case !(value instanceof Object):
          record = new this.model(value);
          this.obj.bind(record);
          return this.normalize(record);
        default:
          return void 0;
      }
    };

    BelongsToProperty.prototype.serialize = function(format) {
      if (format == null) {
        format = 'json';
      }
      if (this.opts.embedded === true) {
        return this.get().serialize(format);
      } else {
        return BelongsToProperty.__super__.serialize.apply(this, arguments);
      }
    };

    return BelongsToProperty;

  })(require('./relationship'));

  module.exports = BelongsToProperty;

}).call(this);
